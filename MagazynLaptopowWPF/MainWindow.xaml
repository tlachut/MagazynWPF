<mah:MetroWindow x:Class="MagazynLaptopowWPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MagazynLaptopowWPF"
        xmlns:vm="clr-namespace:MagazynLaptopowWPF.ViewModels"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        mc:Ignorable="d"
        Title="Magazyn Laptopów Firmy X" Height="650" Width="900"
        WindowStartupLocation="CenterScreen"
        GlowBrush="{DynamicResource MahApps.Brushes.Accent}"
        BorderThickness="1" BorderBrush="{DynamicResource MahApps.Brushes.Accent}">

    <Window.DataContext>
        <vm:MainViewModel/>
    </Window.DataContext>

    <!-- Style specyficzne dla tego okna -->
    <mah:MetroWindow.Resources>
        <Style TargetType="Button" BasedOn="{StaticResource MahApps.Styles.Button.Square}">
            <Setter Property="Margin" Value="3"/>
            <Setter Property="Padding" Value="8,5"/>
            <Setter Property="MinHeight" Value="32"/>
            <!-- Ustawienie minimalnej wysokości dla spójności -->
        </Style>
        <Style x:Key="FilterTextBox" TargetType="TextBox" BasedOn="{StaticResource MahApps.Styles.TextBox}">
            <Setter Property="mah:TextBoxHelper.ClearTextButton" Value="True"/>
            <Setter Property="MinWidth" Value="150"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,0,5,0"/>
        </Style>
        <Style x:Key="FilterLabel" TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="10,0,5,0"/>
        </Style>
    </mah:MetroWindow.Resources>

    <Grid Margin="15">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <!-- Pasek narzędzi -->
            <RowDefinition Height="Auto"/>
            <!-- Filtry -->
            <RowDefinition Height="*"/>
            <!-- DataGrid -->
            <RowDefinition Height="Auto"/>
            <!-- Pasek statusu -->
        </Grid.RowDefinitions>

        <!-- Pasek narzędzi z ikonami -->
        <WrapPanel Grid.Row="0" Orientation="Horizontal" Margin="0,0,0,10">
            <Button Command="{Binding LoadDataCommand}" ToolTip="Odśwież dane (F5)">
                <iconPacks:PackIconMaterial Kind="Refresh" />
            </Button>
            <Button Command="{Binding AddLaptopCommand}" ToolTip="Dodaj nowy laptop" Style="{StaticResource MahApps.Styles.Button.Square.Accent}">
                <StackPanel Orientation="Horizontal">
                    <iconPacks:PackIconMaterial Kind="Plus" Margin="0,0,5,0"/>
                    <TextBlock Text="Dodaj"/>
                </StackPanel>
            </Button>
            <Button Command="{Binding EditLaptopCommand}" ToolTip="Edytuj zaznaczony laptop">
                <StackPanel Orientation="Horizontal">
                    <iconPacks:PackIconMaterial Kind="Pencil" Margin="0,0,5,0"/>
                    <TextBlock Text="Edytuj"/>
                </StackPanel>
            </Button>
            <Button Command="{Binding DeleteLaptopCommand}" ToolTip="Usuń zaznaczony laptop" Style="{StaticResource MahApps.Styles.Button.Square.Highlight}" Background="OrangeRed" Foreground="White">
                <StackPanel Orientation="Horizontal">
                    <iconPacks:PackIconMaterial Kind="DeleteForever" Margin="0,0,5,0"/>
                    <TextBlock Text="Usuń"/>
                </StackPanel>
            </Button>

            <Separator Width="20" Background="Transparent"/>
            <!-- Odstęp -->

            <Button Command="{Binding ExportCommand}" ToolTip="Eksportuj widok do CSV">
                <StackPanel Orientation="Horizontal">
                    <iconPacks:PackIconMaterial Kind="FileExportOutline" Margin="0,0,5,0"/>
                    <TextBlock Text="Eksportuj"/>
                </StackPanel>
            </Button>
            <Button Command="{Binding ImportCommand}" ToolTip="Importuj dane z pliku CSV">
                <StackPanel Orientation="Horizontal">
                    <iconPacks:PackIconMaterial Kind="FileImportOutline" Margin="0,0,5,0"/>
                    <TextBlock Text="Importuj"/>
                </StackPanel>
            </Button>
        </WrapPanel>

        <!-- Sekcja Filtrowania -->
        <Border Grid.Row="1" BorderBrush="{DynamicResource MahApps.Brushes.Gray7}" BorderThickness="1" Padding="10" Margin="0,0,0,10" Background="{DynamicResource MahApps.Brushes.Gray9}">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="Filtry:" VerticalAlignment="Center" FontWeight="Bold" Margin="0,0,10,0"/>
                <TextBlock Text="Marka:" Style="{StaticResource FilterLabel}"/>
                <TextBox Text="{Binding FilterMarka, UpdateSourceTrigger=PropertyChanged}"
                          mah:TextBoxHelper.Watermark="Wpisz markę..."
                          Style="{StaticResource FilterTextBox}"/>
                <TextBlock Text="Model:" Style="{StaticResource FilterLabel}"/>
                <TextBox Text="{Binding FilterModel, UpdateSourceTrigger=PropertyChanged}"
                          mah:TextBoxHelper.Watermark="Wpisz model..."
                          Style="{StaticResource FilterTextBox}"/>
                <!-- Można dodać więcej filtrów -->

                <Button Command="{Binding ClearFiltersCommand}" ToolTip="Wyczyść filtry" Padding="5" VerticalAlignment="Center" Margin="15,0,0,0">
                    <iconPacks:PackIconMaterial Kind="FilterRemoveOutline" />
                </Button>
            </StackPanel>
        </Border>

        <!-- DataGrid (użyje stylów MahApps) -->
        <DataGrid Grid.Row="2"
                  ItemsSource="{Binding LaptopyView}"
                  SelectedItem="{Binding SelectedLaptop, Mode=TwoWay}"
                  AutoGenerateColumns="False"
                  IsReadOnly="True"
                  CanUserAddRows="False"
                  CanUserDeleteRows="False"
                  CanUserSortColumns="True"
                  SelectionMode="Single"
                  GridLinesVisibility="Horizontal"
                  HorizontalScrollBarVisibility="Auto"
                  VerticalScrollBarVisibility="Auto">
            <!-- Usunięto nieprawidłowe właściwości ScrollViewerHelper -->

            <!-- Obsługa podwójnego kliknięcia -->
            <DataGrid.InputBindings>
                <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding EditLaptopCommand}"/>
            </DataGrid.InputBindings>
            <!-- Obsługa klawisza Delete -->
            <DataGrid.CommandBindings>
                <CommandBinding Command="Delete" CanExecute="DeleteCommand_CanExecute" Executed="DeleteCommand_Executed" />
            </DataGrid.CommandBindings>

            <DataGrid.Columns>
                <!-- Kolumny jak poprzednio, ale można dostosować szerokości, np. używając "*" -->
                <DataGridTextColumn Header="Marka" Binding="{Binding Marka}" Width="1.5*" SortMemberPath="Marka"/>
                <DataGridTextColumn Header="Model" Binding="{Binding Model}" Width="2*" SortMemberPath="Model"/>
                <DataGridTextColumn Header="System Operacyjny" Binding="{Binding SystemOperacyjny}" Width="1.5*" SortMemberPath="SystemOperacyjny"/>
                <DataGridTextColumn Header="Ekran (cale)" Binding="{Binding RozmiarEkranu, StringFormat=F1}" Width="1*" SortMemberPath="RozmiarEkranu">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource MahApps.Styles.TextBlock}">
                            <Setter Property="HorizontalAlignment" Value="Right"/>
                            <Setter Property="Margin" Value="0,0,5,0"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Ilość (szt.)" Binding="{Binding Ilosc}" Width="0.8*" SortMemberPath="Ilosc">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource MahApps.Styles.TextBlock}">
                            <Setter Property="HorizontalAlignment" Value="Right"/>
                            <Setter Property="Margin" Value="0,0,5,0"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Ilosc}" Value="0">
                                    <Setter Property="Foreground" Value="Red"/>
                                    <Setter Property="ToolTip" Value="Brak na stanie!"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Ilosc}" Value="1">
                                    <Setter Property="Foreground" Value="Orange"/>
                                    <Setter Property="ToolTip" Value="Ostatnia sztuka!"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>

        <!-- Pasek statusu -->
        <StatusBar Grid.Row="3" VerticalAlignment="Bottom">
            <StatusBarItem>
                <TextBlock Text="{Binding StatusMessage}" />
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right">
                <!-- Wskaźnik zajętości -->
                <mah:ProgressRing IsActive="{Binding IsBusy}" Width="18" Height="18" Foreground="{DynamicResource MahApps.Brushes.Accent}" Margin="0,0,5,0"/>
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right">
                <TextBlock>
                     <Run Text="Widocznych:"/>
                     <Run Text="{Binding LaptopyView.Count, Mode=OneWay}"/>
                     <Run Text="/"/>
                     <Run Text="{Binding Laptopy.Count, Mode=OneWay}"/>
                </TextBlock>
            </StatusBarItem>
        </StatusBar>

    </Grid>
</mah:MetroWindow>